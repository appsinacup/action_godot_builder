name: ðŸš€ Create Release
on:
  workflow_call:
    inputs:
      production:
        description: 'Enable Production build'
        default: false
        type: boolean
      repo:
        description: 'Repository to use for the build'
        default: 'godotengine/godot'
        type: string
      tag:
        description: 'Branch to use for the build'
        default: 'master'
        type: string

# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: 4.4
  SCONSFLAGS: verbose=yes warnings=extra werror=yes strict_checks=yes debug_symbols=no

jobs:
  release:
    name: ðŸš€ Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.tag }}
          submodules: recursive

      - uses: actions/download-artifact@v4
        with:
          path: bin
          pattern: |
            android-*
            ios-*
            linux-*
            macos-*
            windows-*
            web-*

      - name: List downloaded bin
        run: ls -R bin
      
      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      - name: Mac generate bundle (arm64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} arch=arm64 ${{ matrix.sconsflags }} ${{ inputs.production && 'production=yes' || '' }} generate_bundle=yes
          platform: macos
          target: ${{ matrix.target }}

      - name: iOS generate bundle (arm64)
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} arch=arm64 ${{ matrix.sconsflags }} ${{ inputs.production && 'production=yes' || '' }} generate_bundle=yes
          platform: ios
          target: ${{ matrix.target }}

      - name: Mac Create Editor Bundle
        working-directory: bin
        run: |
          scons 
          cp -r ../misc/dist/macos_tools.app ./Godot.app
          mkdir -p Godot.app/Contents/MacOS
          cp godot.macos.editor.universal Godot.app/Contents/MacOS/Godot
          chmod +x Godot.app/Contents/MacOS/Godot
          codesign --force --timestamp --options=runtime --entitlements misc/dist/macos/editor.entitlements -s - bin/Godot.app

      - name: Mac Create Template Bundle
        working-directory: bin
        run: |
          cp -r ../misc/dist/macos_template.app .
          mkdir -p macos_template.app/Contents/MacOS
          cp godot.macos.template_release.universal macos_template.app/Contents/MacOS/godot_macos_release.universal
          cp godot.macos.template_debug.universal macos_template.app/Contents/MacOS/godot_macos_debug.universal
          chmod +x macos_template.app/Contents/MacOS/godot_macos*
          zip -q -9 -r macos.zip macos_template.app

      - name: Android Create Editor/Template Bundles
        run: |
          # Example: adjust as needed for your actual Android outputs
          # This is a placeholder for any Android-specific packaging (e.g., .aab, .apk, .aar, etc.)
          # If you already have the correct files in bin/, you may not need this step.
          echo "Android packaging step (customize as needed)"
      
      - name: Android Generate Godot templates
        run: |
          cd platform/android/java
          ./gradlew generateGodotTemplates
          cd ../../..
          ls -l bin/
          cp -f bin/android*.apk "templates/"
          cp -f bin/android_source.zip "templates/"

      - name: Android Generate Godot editor
        if: matrix.target == 'editor'
        run: |
          cd platform/android/java
          ./gradlew generateGodotEditor
          ./gradlew generateGodotHorizonOSEditor
          ./gradlew generateGodotPicoOSEditor
          cd ../../..
          ls -l bin/android_editor_builds/

          # Separate different editors for multiple artifacts
          mkdir horizonos
          mv bin/android_editor_builds/*-horizonos-* horizonos
          mkdir picoos
          mv bin/android_editor_builds/*-picoos-* picoos

      - name: Package per-platform editors and templates
        run: |
          set -e
          VERSION=${{ inputs.tag }}
          VERSION_CLEAN=${VERSION//-/.}
          mkdir -p release/templates/$VERSION_CLEAN

          # Editors
          cp bin/godot.linuxbsd.editor.x86_64* release/Godot_v${VERSION_CLEAN}_linux.x86_64.zip || exit
          cp bin/godot.linuxbsd.editor.x86* release/Godot_v${VERSION_CLEAN}_linux.x86_32.zip || exit
          cp bin/godot.linuxbsd.editor.arm64* release/Godot_v${VERSION_CLEAN}_linux.arm64.zip || exit
          cp bin/godot.linuxbsd.editor.arm32* release/Godot_v${VERSION_CLEAN}_linux.arm32.zip || exit
          cp bin/godot.windows.editor.x86_64* release/Godot_v${VERSION_CLEAN}_win64.exe.zip || exit
          cp bin/godot.windows.editor.x86* release/Godot_v${VERSION_CLEAN}_win32.exe.zip || exit
          cp bin/godot.windows.editor.arm64* release/Godot_v${VERSION_CLEAN}_windows_arm64.exe.zip || exit
          cp bin/godot.macos.editor.universal* release/Godot_v${VERSION_CLEAN}_macos.universal.zip || exit
          cp bin/Godot.app.zip release/Godot_v${VERSION_CLEAN}_macos.app.zip || exit
          cp bin/godot.web.editor* release/Godot_v${VERSION_CLEAN}_web_editor.zip || exit
          cp bin/godot.android.editor.aab release/Godot_v${VERSION_CLEAN}_android_editor.aab || exit
          cp bin/godot.android.editor.apk release/Godot_v${VERSION_CLEAN}_android_editor.apk || exit
          cp bin/godot.android.editor_horizonos.apk release/Godot_v${VERSION_CLEAN}_android_editor_horizonos.apk || exit
          cp bin/godot.android.editor_picoos.apk release/Godot_v${VERSION_CLEAN}_android_editor_picoos.apk || exit
          cp bin/godot.ios.editor* release/Godot_v${VERSION_CLEAN}_ios_editor.zip || exit

          # Export templates
          cp bin/godot.linuxbsd.template_release.x86_64* release/templates/$VERSION_CLEAN/linux_x86_64_release.zip || exit
          cp bin/godot.linuxbsd.template_release.x86* release/templates/$VERSION_CLEAN/linux_x86_32_release.zip || exit
          cp bin/godot.linuxbsd.template_release.arm64* release/templates/$VERSION_CLEAN/linux_arm64_release.zip || exit
          cp bin/godot.linuxbsd.template_release.arm32* release/templates/$VERSION_CLEAN/linux_arm32_release.zip || exit
          cp bin/godot.windows.template_release.x86_64* release/templates/$VERSION_CLEAN/windows_x86_64_release.zip || exit
          cp bin/godot.windows.template_release.x86* release/templates/$VERSION_CLEAN/windows_x86_32_release.zip || exit
          cp bin/godot.windows.template_release.arm64* release/templates/$VERSION_CLEAN/windows_arm64_release.zip || exit
          cp bin/godot.macos.template_release.universal* release/templates/$VERSION_CLEAN/macos_universal_release.zip || exit
          cp bin/macos.zip release/templates/$VERSION_CLEAN/macos_bundle.zip || exit
          cp bin/godot.web.template_release* release/templates/$VERSION_CLEAN/web_release.zip || exit
          # Add Android/iOS templates as needed

          # Create export templates .tpz
          cd release
          zip -r Godot_v${VERSION_CLEAN}_export_templates.tpz templates
      
      - name: List release directory
        run: ls -R release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Custom Godot Release ${{ github.ref_name }}"
          files: |
            release/Godot_v${{ inputs.tag }}_linux.x86_64.zip
            release/Godot_v${{ inputs.tag }}_linux.x86_32.zip
            #release/Godot_v${{ inputs.tag }}_linux.arm64.zip
            #release/Godot_v${{ inputs.tag }}_linux.arm32.zip
            release/Godot_v${{ inputs.tag }}_win64.exe.zip
            release/Godot_v${{ inputs.tag }}_win32.exe.zip
            release/Godot_v${{ inputs.tag }}_windows_arm64.exe.zip
            release/Godot_v${{ inputs.tag }}_macos.universal.zip
            release/Godot_v${{ inputs.tag }}_macos.app.zip
            release/Godot_v${{ inputs.tag }}_web_editor.zip
            release/Godot_v${{ inputs.tag }}_android_editor.aab
            release/Godot_v${{ inputs.tag }}_android_editor.apk
            release/Godot_v${{ inputs.tag }}_android_editor_horizonos.apk
            release/Godot_v${{ inputs.tag }}_android_editor_picoos.apk
            release/Godot_v${{ inputs.tag }}_ios_editor.zip
            release/Godot_v${{ inputs.tag }}_export_templates.tpz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
