name: ðŸš€ Create Release
on:
  workflow_call:
    inputs:
      production:
        description: 'Enable Production build'
        default: false
        type: boolean
      repo:
        description: 'Repository to use for the build'
        default: 'godotengine/godot'
        type: string
      tag:
        description: 'Branch to use for the build'
        default: 'master'
        type: string

jobs:
  release:
    name: ðŸš€ Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.tag }}
          submodules: recursive

      - uses: actions/download-artifact@v4
        with:
          path: bin
          pattern: |
            android-*
            ios-*
            linux-*
            macos-*
            windows-*
            web-*

      - name: List downloaded artifacts
        run: ls -R artifacts

      - name: Package per-platform editors and templates
        run: |
          mkdir -p release/templates/${{ inputs.tag }}
          # TODO
          cp bin/linux-*/godot.linuxbsd.editor.x86_64* release/Godot_v4.4-stable_linux.x86_64.zip
          cp artifacts/windows-*/godot.windows.editor.x86_64* release/Godot_v4.4-stable_win64.exe.zip
          cp artifacts/macos-*/godot.macos.editor.universal* release/Godot_v4.4-stable_macos.universal.zip
          cp artifacts/web-*/godot.web.editor* release/Godot_v4.4-stable_web.zip
          cp artifacts/android-*/godot.android.editor* release/Godot_v4.4-stable_android.zip
          cp artifacts/ios-*/godot.ios.editor* release/Godot_v4.4-stable_ios.zip

          cp artifacts/linux-*/godot.linuxbsd.template_release.x86_64* release/templates/4.4.stable/linux_x86_64_release.zip
          cp artifacts/windows-*/godot.windows.template_release.x86_64* release/templates/${{ inputs.tag }}/windows_x86_64_release.zip

          cd release
          zip -r Godot_v${{ inputs.tag }}_export_templates.tpz templates
          cd ..

      - name: Mac Create Editor Bundle
        run: |
          cp -r misc/dist/macos_tools.app ./bin/Godot.app
          mkdir -p bin/Godot.app/Contents/MacOS
          cp bin/godot.macos.editor.universal bin/Godot.app/Contents/MacOS/Godot
          chmod +x bin/Godot.app/Contents/MacOS/Godot
          codesign --force --timestamp --options=runtime --entitlements misc/dist/macos/editor.entitlements -s - bin/Godot.app

      - name: Mac Create Template Bundle
        run: |
          cd bin
          cp -r ../misc/dist/macos_template.app .
          mkdir -p macos_template.app/Contents/MacOS
          cp godot.macos.template_release.universal macos_template.app/Contents/MacOS/godot_macos_release.universal
          cp godot.macos.template_debug.universal macos_template.app/Contents/MacOS/godot_macos_debug.universal
          chmod +x macos_template.app/Contents/MacOS/godot_macos*
          zip -q -9 -r macos.zip macos_template.app
        
          cp macos.zip "$template_dir/macos.zip"

      - name: Upload artifact (Horizon OS)
        if: matrix.target == 'editor'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-android-${{ matrix.sconsflags }}-${{ inputs.production && 'production' || 'normal' }}-horizonos
          path: horizonos

      - name: Upload artifact (PICO OS)
        if: matrix.target == 'editor'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-android-${{ matrix.sconsflags }}-${{ inputs.production && 'production' || 'normal' }}-picoos
          path: picoos

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Custom Godot Release ${{ github.ref_name }}"
          files: |
            release/Godot_v${{ inputs.tag }}_linux.x86_64.zip
            release/Godot_v${{ inputs.tag }}_win64.exe.zip
            release/Godot_v${{ inputs.tag }}_macos.universal.zip
            release/Godot_v${{ inputs.tag }}_export_templates.tpz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
