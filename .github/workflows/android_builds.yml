name: ðŸ¤– Android Builds
on:
  workflow_call:
    secrets:
      ENCRYPTION_KEY:
        description: Encryption key for the build
    inputs:
      base-branch:
        description: 'Base branch to use for the builds'
        type: string
      lto:
        description: 'LTO mode. Options: "none", "thin", "full"'
        type: string
      repo:
        description: 'Repository to use for the build'
        type: string
      tag:
        description: 'tag to use for the build'
        type: string
      module_flags:
        description: 'Extra module flags, e.g. module_webm_enabled=no'
        type: string
      template_module_flags:
        description: 'Extra module flags for template build, e.g. module_webm_enabled=no'
        type: string
      use_encryption_key:
        description: 'Whether to use the encryption key for the build (if available)'
        type: boolean

# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: ${{ inputs.base-branch }}
  SCONSFLAGS: verbose=yes warnings=extra werror=yes debug_symbols=no strict_checks=yes swappy=yes ${{ inputs.module_flags }} use_static_cpp=yes

jobs:
  build-android:
    runs-on: ubuntu-24.04
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
# Templates
          - name: Template Release (target=template_release)
            target: template_release

          - name: Template Debug (target=template_debug)
            target: template_debug

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.tag }}
          submodules: recursive

      - name: Export Encryption Key
        if: ${{ inputs.use_encryption_key == 'true' }}
        run: echo "SCRIPT_AES256_ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> $GITHUB_ENV

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: android-${{ matrix.target }}-${{ inputs.lto }}
        continue-on-error: true

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      - name: Download pre-built Android Swappy Frame Pacing Library
        uses: dsaltares/fetch-gh-release-asset@1.1.2
        with:
          repo: godotengine/godot-swappy
          version: tags/from-source-2025-01-31
          file: godot-swappy.7z
          target: swappy/godot-swappy.7z

      - name: Extract pre-built Android Swappy Frame Pacing Library
        run: 7za x -y swappy/godot-swappy.7z -o${{github.workspace}}/thirdparty/swappy-frame-pacing

      - name: Compilation x86_64
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONSFLAGS }} ${{ matrix.scons-flags }} ${{ inputs.lto }} ${{ inputs.template_module_flags }} arch=x86_64
          platform: android
          target: ${{ matrix.target }}

      - name: Compilation x86
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONSFLAGS }} ${{ matrix.scons-flags }} ${{ inputs.lto }} ${{ inputs.template_module_flags }} arch=x86
          platform: android
          target: ${{ matrix.target }}

      - name: Compilation arm64
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONSFLAGS }} ${{ matrix.scons-flags }} ${{ inputs.lto }} ${{ inputs.template_module_flags }} arch=arm64
          platform: android
          target: ${{ matrix.target }}

      - name: Compilation arm32
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONSFLAGS }} ${{ matrix.scons-flags }} ${{ inputs.lto }} ${{ inputs.template_module_flags }} arch=arm32 generate_apk=yes
          platform: android
          target: ${{ matrix.target }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: android-${{ matrix.target }}-${{ inputs.lto }}
        continue-on-error: true

      - name: Rename Android sources for release
        if: ${{ matrix.target == 'template_release' }}
        run: mv bin/android_source.zip bin/android_source.release.zip

      - name: Rename Android sources for debug
        if: ${{ matrix.target == 'template_debug' }}
        run: mv bin/android_source.zip bin/android_source.debug.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.target }}-${{ inputs.lto }}
          path: bin
