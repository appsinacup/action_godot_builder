name: 🍎 macOS Builds
on:
  workflow_call:
    secrets:
      ENCRYPTION_KEY:
        description: Encryption key for the build
        required: false
    inputs:
      lto:
        description: 'LTO mode. Options: "none", "thin", "full"'
        required: false
        type: string
        default: "lto=thin"
      repo:
        description: 'Repository to use for the build'
        default: 'godotengine/godot'
        type: string
      tag:
        description: 'tag to use for the build'
        required: true
        type: string
        default: '4.4.1-stable'
      build_profile:
        description: 'Build profile file path.'
        required: false
        type: string
        default: ''
      module_flags:
        description: 'Extra module flags, e.g. module_webm_enabled=no'
        required: false
        type: string
        default: ''
      template_module_flags:
        description: 'Extra module flags for template build, e.g. module_webm_enabled=no'
        required: false
        type: string
        default: ''

# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: 4.4
  SCONSFLAGS: verbose=yes warnings=extra werror=yes strict_checks=yes debug_symbols=no build_profile=${{ inputs.build_profile }} use_static_cpp=yes
  HAS_ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY != '' }}

jobs:
  build-macos:
    runs-on: macos-latest
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor (target=editor)
            target: editor
            sconsflags: ''

          - name: Template (target=template_release)
            target: template_release
            sconsflags: ''
          
          - name: Template (target=template_debug)
            target: template_debug
            sconsflags: ''

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.tag }}
          submodules: recursive
      
      - name: Export Encryption Key
        if: ${{ env.HAS_ENCRYPTION_KEY == 'true' }}
        run: echo "SCRIPT_AES256_ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> $GITHUB_ENV

      - name: Select Xcode 16
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
      
      - name: Checkout script repo for install_vulkan_sdk_macos.sh
        uses: actions/checkout@v4
        with:
          repository: appsinacup/action_godot_builder
          path: misc/scripts

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: macos-${{ matrix.target }}-${{ matrix.sconsflags }}-${{ inputs.lto }}
        continue-on-error: true

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      - name: Setup Vulkan SDK
        run: |
          sh misc/scripts/install_vulkan_sdk_macos.sh

      - name: Compilation (x86_64)
        if: matrix.target == 'editor'
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} arch=x86_64 ${{ matrix.sconsflags }} ${{ inputs.lto }} ${{ inputs.module_flags }}
          platform: macos
          target: ${{ matrix.target }}

      - name: Compilation (arm64)
        if: matrix.target == 'editor'
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} arch=arm64 ${{ matrix.sconsflags }} ${{ inputs.lto }} ${{ inputs.module_flags }}
          platform: macos
          target: ${{ matrix.target }}

      - name: Compilation (x86_64)
        if: matrix.target != 'editor'
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} arch=x86_64 ${{ matrix.sconsflags }} ${{ inputs.lto }} ${{ inputs.template_module_flags }}
          platform: macos
          target: ${{ matrix.target }}

      - name: Compilation (arm64)
        if: matrix.target != 'editor'
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} arch=arm64 ${{ matrix.sconsflags }} ${{ inputs.lto }} ${{ inputs.template_module_flags }}
          platform: macos
          target: ${{ matrix.target }}

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: macos-${{ matrix.target }}-${{ matrix.sconsflags }}-${{ inputs.lto }}
        continue-on-error: true

      - name: Prepare artifact
        run: |
          lipo -create ./bin/godot.macos.${{ matrix.target }}.x86_64 ./bin/godot.macos.${{ matrix.target }}.arm64 -output ./bin/godot.macos.${{ matrix.target }}.universal
          strip bin/godot.*
          chmod +x bin/godot.*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.target }}-${{ matrix.sconsflags }}-${{ inputs.lto }}
          path: bin
