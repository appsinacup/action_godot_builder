name: 🍏 iOS Builds
on:
  workflow_call:
    inputs:
      base-branch:
        description: 'Base branch to use for the builds'
        type: string
      lto:
        description: 'LTO mode. Options: "none", "thin", "full"'
        type: string
      repo:
        description: 'Repository to use for the build'
        type: string
      tag:
        description: 'tag to use for the build'
        type: string
      module_flags:
        description: 'Extra module flags, e.g. module_webm_enabled=no'
        type: string
      template_module_flags:
        description: 'Extra module flags for template build, e.g. module_webm_enabled=no'
        type: string
      use_encryption_key:
        description: 'Whether to use the encryption key for the build (if available)'
        type: string

# Global Settings
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: ${{ inputs.base-branch }}
  SCONSFLAGS: verbose=yes warnings=extra werror=yes debug_symbols=no strict_checks=yes ${{ inputs.module_flags }} use_static_cpp=yes

jobs:
  build-ios:
    runs-on: macos-latest
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Template
            build-mono: false
            scons-mono-flags: ''

          - name: Template Mono
            build-mono: true
            scons-mono-flags: module_mono_enabled=yes mono_glue=yes

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.tag }}
          submodules: recursive

      - name: Export Encryption Key
        if: ${{ inputs.use_encryption_key == 'true' }}
        run: echo "SCRIPT_AES256_ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> $GITHUB_ENV

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: ios-${{ matrix.scons-mono-flags }}-${{ inputs.lto }}
        continue-on-error: true

      - name: Setup Python and SCons
        uses: ./.github/actions/godot-deps

      - name: Install Mono toolchain
        if: matrix.build-mono
        run: |
          brew list mono || brew install mono

      - name: Setup .NET SDK
        if: matrix.build-mono
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Setup Vulkan SDK
        run: |
          sh misc/scripts/install_vulkan_sdk_macos.sh

      - name: Mono tools build (pre-glue)
        if: matrix.build-mono
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONSFLAGS }} arch=x86_64 ${{ inputs.lto }} ${{ inputs.module_flags }} module_mono_enabled=yes mono_glue=no
          platform: macos
          target: editor

      - name: Generate C# glue
        if: matrix.build-mono
        run: ./bin/godot.macos.editor.x86_64.mono --headless --generate-mono-glue ./modules/mono/glue

      - name: Compilation Debug
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONSFLAGS }} arch=arm64 ${{ inputs.lto }} ${{ inputs.template_module_flags }} ${{ matrix.scons-mono-flags }}
          platform: ios
          target: template_debug

      - name: Compilation Release
        uses: ./.github/actions/godot-build
        with:
          scons-flags: ${{ env.SCONSFLAGS }} arch=arm64 ${{ inputs.lto }} ${{ inputs.template_module_flags }} ${{ matrix.scons-mono-flags }} generate_bundle=yes
          platform: ios
          target: template_release

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: ios-${{ matrix.scons-mono-flags }}-${{ inputs.lto }}
        continue-on-error: true

      - name: Build .NET solutions
        if: matrix.build-mono
        run: |
          dotnet --info
          ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=ios --werror

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ matrix.scons-mono-flags }}-${{ inputs.lto }}
          path: bin
